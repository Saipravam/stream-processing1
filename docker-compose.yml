version: '3.8'
services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userdb
    ports:
      - "5432:5432"
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - "2181:2181"
  kafka:
    image: bitnami/kafka:3.2.3
    container_name: kafka
    environment:
      KAFKA_CFG_KRAFT_MODE: false
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ZOOKEEPER_METADATA_MIGRATION_ENABLE: false
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8000:8000"
    environment:
      KAFKA_BROKER: kafka:9092
      POSTGRES_HOST: postgres
    depends_on:
      - kafka
      - postgres
    restart: always
  consumer-service:
    build: ./consumer-service
    container_name: consumer-service
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - kafka
    restart: always

kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181